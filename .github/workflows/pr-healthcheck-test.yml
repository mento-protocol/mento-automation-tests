name: "[Automated-Tests] PR Healthcheck Test Run"

on: push

jobs:
  define-app:
    name: "Define App Name for PR Healthcheck"
    runs-on: ubuntu-latest
    outputs:
      app-name: ${{ steps.extract-app-name.outputs.app-name }}
    steps:
      - name: Define app name for PR healthcheck
        id: extract-app-name
        run: |
          if [[ "${{ github.event.head_commit.message }}" =~ @app-mento ]]; then
            echo "Using the @app-mento tag to run app-mento tests"
            echo "app-name=app-mento" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.head_commit.message }}" =~ @governance ]]; then
            echo "Using the @governance tag to run governance tests"
            echo "app-name=governance" >> $GITHUB_OUTPUT
          else
            echo "No app name found in commit message!"
            echo "Using the default 'app-mento' app to validate the PR"
            echo "app-name=app-mento" >> $GITHUB_OUTPUT
          fi
  define-specs:
    name: "Define Specs Regex for PR Healthcheck"
    runs-on: ubuntu-latest
    outputs:
      specs-regex: ${{ steps.extract-specs-regex.outputs.specs-regex }}
    steps:
      - name: Define specs regex for PR healthcheck
        id: extract-specs-regex
        run: |
          if [[ "${{ github.event.head_commit.message }}" =~ __@regression__ ]]; then
            echo "Using the @regression tag to run regression tests"
            echo "specs-regex=@regression" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.head_commit.message }}" =~ __@smoke__ ]]; then
            echo "Using the @smoke tag to run smoke tests"
            echo "specs-regex=@smoke" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.head_commit.message }}" =~ __@full__ ]]; then
            echo "Using the @full tag to run all the tests"
            echo "specs-regex=.*" >> $GITHUB_OUTPUT  
          elif [[ "${{ github.event.head_commit.message }}" =~ __([^_]+)__ ]]; then
            echo "Using the parsed specs regex to run specific tests: ${BASH_REMATCH[1]}"
            echo "specs-regex=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          else
            echo "No specs regex found in commit message!"
            echo "Using the default 'connect-wallet' spec to validate the PR"
            echo "specs-regex=connect-wallet" >> $GITHUB_OUTPUT
          fi

  # TODO: Define app name based on the commit changes
  # define-app:

  test:
    name: "PR Healthcheck Test Run"
    needs: [define-app, define-specs]
    uses: ./.github/workflows/re-usable-test.yml
    with:
      SPECS_REGEX: ${{ needs.define-specs.outputs.specs-regex }}
      APP_NAME: ${{ needs.define-app.outputs.app-name }}
      IS_MAINNET: "false"
      HTML_REPORT_NAME: "pr-healthcheck"
      TESTOMAT_REPORT_GENERATION: "false"
      NOTIFICATION_MESSAGE: "[AQA] PR Healthcheck"
    secrets: inherit
